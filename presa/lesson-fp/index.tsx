import React from 'react'
import ReactDOM from 'react-dom'
import { Presentation, Fragment } from '@saitonakamura/presa'
import {
  GlobalStyle,
  AlertSlide,
  Alert,
  Card,
  Avatar,
  CardContent,
  CardTitle,
  CardDesc,
  TitleSlide,
  Text,
  OuterLink,
  List,
  ListItem,
  NoticeBlock,
  CenteredPlainLayout,
  FullWidthFragment,
  OtusSlide,
  Quote,
  HorizontalPlainLayout,
  HorizontalLayout,
} from '../lib/blocks'
import {
  CheckRecordSlide,
  RulesSlide,
  QuestionsSlide,
  CheckSoundVideoSlide,
  MicrophoneSlide,
} from '../lib/slides'
import { theme } from '../lib/theme'
import { AnimatedSlide } from '../lib/useAnimatedSteps'
import { animated } from 'react-spring'
import { CenteredLayout } from '@saitonakamura/presa/lib/components/slide/layouts'
import { Code } from '@saitonakamura/presa/lib/blocks'
import ReduxDevToolsImg from '../assets/reduxdevtools.png'

const PuritySlides = [
  <AlertSlide
    key='pure'
    name='–ß–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏'
    alert='–ß–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ üßº'
  ></AlertSlide>,
  <OtusSlide key='puredef' layout={CenteredLayout}>
    <Quote size={45}>
      –ß–∏—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è —ç—Ç–æ –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–∞—è (–≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
      –ø—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö) —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑ —Å–∞–π–¥ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    </Quote>
  </OtusSlide>,
  <TitleSlide
    key='ispure0'
    name='–ß–∏—Å—Ç–æ? #0'
    title='–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —á–∏—Å—Ç–∞—è?'
    layout={CenteredPlainLayout}
  >
    <Code fontSize={35}>{`const identity = (x) => x`}</Code>
  </TitleSlide>,
  <TitleSlide
    key='ispure1'
    name='–ß–∏—Å—Ç–æ? #1'
    title='–ê —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —á–∏—Å—Ç–∞—è?'
    layout={CenteredPlainLayout}
  >
    <Code
      fontSize={35}
    >{`const add = (operand1, operand2) =>\n  operand1 + operand2`}</Code>
  </TitleSlide>,
  <TitleSlide
    key='ispure2'
    name='–ß–∏—Å—Ç–æ? #2'
    title='–ê —ç—Ç–∞?'
    layout={CenteredPlainLayout}
  >
    <Code fontSize={35}>{`const trace = (x) => {
  console.log(x)
  return x
}`}</Code>
  </TitleSlide>,
  <TitleSlide
    key='ispure3'
    name='–ß–∏—Å—Ç–æ? #3'
    title='–ê —ç—Ç–∞?'
    layout={CenteredPlainLayout}
  >
    <Code fontSize={35}>{`let id = 0
const newId = () => id++`}</Code>
  </TitleSlide>,
  <OtusSlide key='ispure4' name='–ß–∏—Å—Ç–æ? #4' layout={CenteredLayout}>
    <Code
      fontSize={35}
    >{`const magicConstant = 42\n\nconst getMagicConstant = () =>\n  magicConstant`}</Code>
  </OtusSlide>,
  <OtusSlide key='ispure5' name='–ß–∏—Å—Ç–æ? #5' layout={CenteredLayout}>
    <Code
      fontSize={35}
    >{`let magicNumber = 9\n\nconst getMagicNumber = () =>\n  magicNumber`}</Code>
  </OtusSlide>,
  <OtusSlide key='ispure6' name='–ß–∏—Å—Ç–æ? #6' layout={CenteredLayout}>
    <Code
      fontSize={35}
      language='typescript'
    >{`const sum = (arr: number[]) =>\n  arr.reduce((acc, curr) => acc + curr, 0)`}</Code>
  </OtusSlide>,
  <OtusSlide key='ispure7' name='–ß–∏—Å—Ç–æ? #7' layout={CenteredLayout}>
    <Code fontSize={35} language='typescript'>{`const sum = (arr: number) => {
  let sum = 0
  for (let num of arr) {
    sum += num
  }
  return sum
}`}</Code>
  </OtusSlide>,
  <OtusSlide key='sideeffectdef' name='–°–∞–π–¥-—ç—Ñ—Ñ–µ–∫—Ç—ã' layout={CenteredLayout}>
    <Quote size={35}>
      –°–∞–π–¥-—ç—Ñ—Ñ–µ–∫—Ç —ç—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≤–Ω–µ—à–Ω–∏–º
      –º–∏—Ä–æ–º –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –º–æ–º–µ–Ω—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    </Quote>
  </OtusSlide>,
  <TitleSlide
    key='sideeffectslist'
    name='–°–∞–π–¥-—ç—Ñ—Ñ–µ–∫—Ç—ã'
    title='–°–∞–π–¥-—ç—Ñ—Ñ–µ–∫—Ç—ã –≤–∫–ª—é—á–∞—é—Ç, –Ω–æ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—é—Ç—Å—è...'
    titleSize='m'
    layout={CenteredLayout}
  >
    <List gapSize={20}>
      <ListItem>
        <Text size={30}>–ß—Ç–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è</Text>
      </ListItem>
      <ListItem>
        <Text size={30}>–ú—É—Ç–∞—Ü–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è</Text>
      </ListItem>
      <ListItem>
        <Text size={30}>–ß—Ç–µ–Ω–∏–µ –∏–∑ –ë–î</Text>
      </ListItem>
      <ListItem>
        <Text size={30}>–ó–∞–ø–∏—Å—å –≤ –ë–î</Text>
      </ListItem>
      <ListItem>
        <Text size={30}>HTTP –∑–∞–ø—Ä–æ—Å—ã</Text>
      </ListItem>
      <ListItem>
        <Text size={30}>–ß—Ç–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞</Text>
      </ListItem>
      <ListItem>
        <Text size={30}>–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ</Text>
      </ListItem>
    </List>
  </TitleSlide>,
  <TitleSlide
    key='whypure'
    name='–ê –∑–∞—á–µ–º —á–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏?'
    title='–ê —á–µ–º —Ö–æ—Ä–æ—à–∏ —á–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏?'
    layout={CenteredLayout}
  >
    <List gapSize={55}>
      <Fragment>
        <ListItem>
          <Text size={40}>–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å ‚úÖ</Text>
        </ListItem>
      </Fragment>
      <Fragment>
        <ListItem>
          <Text size={40}>–û –Ω–∏—Ö –ª–µ–≥—á–µ —Ä–∞—Å—Å—É–∂–¥–∞—Ç—å ü§Ø</Text>
        </ListItem>
      </Fragment>
      <Fragment>
        <ListItem>
          <Text size={40}>–ò—Ö –ª–µ–≥—á–µ –∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞—Ç—å ü§ù</Text>
        </ListItem>
      </Fragment>
    </List>
  </TitleSlide>,
  QuestionsSlide,
  <TitleSlide
    key='purepractice'
    name='–ü—Ä–∞–∫—Ç–∏–∫–∞'
    title='–í—Ä–µ–º—è –ø—Ä–∞–∫—Ç–∏–∫–∏!'
    layout={CenteredPlainLayout}
  >
    <Text size={150}>üë©‚Äçüíª</Text>
  </TitleSlide>,
]

const ImmutabilitySlides = [
  <AlertSlide
    key='immutabilty'
    name='–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å'
    alert='–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å üíé'
  />,
  <OtusSlide key='immutabdef' name='–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–º–º—É–±–µ–ª—å–Ω–æ—Å—Ç–∏'>
    <Quote size={45}>
      –ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –º—É—Ç–∞—Ü–∏–π –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –∫–ª–∞—Å—Å–∞, –µ–≥–æ
      –Ω–µ–∏–∑–º–µ–Ω—è–µ–º–æ—Å—Ç—å
    </Quote>
  </OtusSlide>,
  <TitleSlide
    key='isimmut1'
    name='–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ? #1'
    title='–≠—Ç–æ –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ?'
    layout={CenteredLayout}
  >
    <Code fontSize={35}>{`const x = 1`}</Code>
  </TitleSlide>,
  <TitleSlide
    key='isimmut2'
    name='–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ? #2'
    title='–ê —ç—Ç–æ –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ?'
    layout={CenteredLayout}
  >
    <Code fontSize={35}>{`let x = 1\nx++`}</Code>
  </TitleSlide>,
  <TitleSlide
    key='isimmut3'
    name='–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ? #3'
    title='–ê —ç—Ç–æ?'
    layout={CenteredLayout}
  >
    <Code fontSize={35}>{`const x = { name: 'Nick' }\nx.name = 'Mike'`}</Code>
  </TitleSlide>,
  <OtusSlide key='isimmut4' name='–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ? #4' layout={CenteredLayout}>
    <Code
      fontSize={35}
    >{`const x = { name: 'Mike', age: 27 }\nconst y = { ...x, age: 18 }`}</Code>
  </OtusSlide>,
  <OtusSlide key='isimmut5' name='–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ? #5' layout={CenteredLayout}>
    <Code fontSize={35}>{`const x = []\nx.push(1)\nconst y = x`}</Code>
  </OtusSlide>,
  <OtusSlide key='isimmut6' name='–ò–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ? #6' layout={CenteredLayout}>
    <Code fontSize={35}>{`const x = [1]\nconst y = [...x, 2]`}</Code>
  </OtusSlide>,
  <TitleSlide
    key='whyimmut'
    name='–ê –∑–∞—á–µ–º –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å?'
    title='–ê —á–µ–º —Ö–æ—Ä–æ—à–∞ –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å?'
    layout={CenteredLayout}
  >
    <List gapSize={55}>
      <Fragment>
        <ListItem>
          <Text size={40}>–£–¥–æ–±–Ω–æ –¥–µ–±–∞–∂–∏—Ç—å ü§Ø</Text>
        </ListItem>
      </Fragment>
      <Fragment>
        <ListItem>
          <Text size={40}>Referential transparency: —Å–∫–æ—Ä–æ—Å—Ç—å üêÜ</Text>
        </ListItem>
      </Fragment>
    </List>
  </TitleSlide>,
  <OtusSlide
    key='reduxdevtools'
    name='Redux dev tools'
    layout={CenteredPlainLayout}
  >
    <img src={ReduxDevToolsImg} />
  </OtusSlide>,
  <OtusSlide
    key='refeq'
    name='Referential transparency'
    layout={HorizontalLayout}
    layoutStyle={{ justifyContent: 'space-around' }}
  >
    <Code>{`{
  name: 'Mike',
  age: 27,
  interests: [
    'programming',
    'drums',
    'cats',
  ],
  pet: {
    name: 'Vasya',
    age: 6
  }
}`}</Code>
    <Code>{`{
  name: 'Mike',
  age: 27,
  interests: [
    'programming',
    'drums',
    'running',
  ],
  pet: {
    name: 'Vasya',
    age: 6
  }
}`}</Code>
  </OtusSlide>,
  <OtusSlide
    key='refeq2'
    name='Referential transparency #2'
    layout={CenteredLayout}
  >
    <Code>{` const person = {
  name: 'Mike',
  age: 27,
  interests: [
    'programming',
    'drums',
    'cats',
  ],
  pet: {
    name: 'Vasya',
    age: 6
  }
}

person.interests.pop()
person.interests.push('cats')`}</Code>
  </OtusSlide>,

  <OtusSlide
    key='refer3'
    name='Referential transparency #3'
    layout={HorizontalLayout}
    layoutStyle={{ justifyContent: 'space-around', alignItems: 'flex-start' }}
  >
    <Code>{` const person = {
  name: 'Mike',
  age: 27,
  interests: [
    'programming',
    'drums',
    'cats',
  ],
  pet: {
    name: 'Vasya',
    age: 6
  }
}`}</Code>
    <Code>{`const newInterestsWithoutRunning =
  person.interests
    .slice(0, person.interests.length - 1)

const newInterests = [
  ...newInterestsWithoutRunning,
  'cats'
]

const newPerson = {
  ...person,
  interests: newInterests
}`}</Code>
  </OtusSlide>,
  QuestionsSlide,
]

const CurrySlides = [
  <AlertSlide
    key='curry'
    name='–ö–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'
    alert='–ö–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ'
  ></AlertSlide>,
  <TitleSlide
    key='partial'
    name='–ß–∞—Å—Ç–∏—á–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ'
    title='–ß–∞—Å—Ç–∏—á–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ'
    layout={CenteredPlainLayout}
  >
    <Code>{`const fetchData = (url, params) =>\n  fetch(\`\${url}?\${toUrlParams(params)}\`)

const fetchOnUsers = (params) => fetchData('/users', params)

fetchOnUsers({ id: 1 })`}</Code>
  </TitleSlide>,
  <TitleSlide
    key='curryex'
    name='–ö–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'
    title='–ö–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ'
    layout={CenteredPlainLayout}
  >
    <Code fontSize={35}>{`String -> Object -> Promise<unknown>`}</Code>
    <Code fontSize={35}>{`  const fetchData = (url, params) => ...`}</Code>
  </TitleSlide>,
  QuestionsSlide,
  <TitleSlide
    key='purepractice'
    name='–ü—Ä–∞–∫—Ç–∏–∫–∞'
    title='–í—Ä–µ–º—è –ø—Ä–∞–∫—Ç–∏–∫–∏!'
    layout={CenteredPlainLayout}
  >
    <Text size={150}>üë©‚Äçüíª</Text>
  </TitleSlide>,
]

const TypesSlides = [
  <AlertSlide
    key='types'
    name='–§–ü –¢–∏–ø—ã'
    alert='–¢–∏–ø—ã –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É'
  ></AlertSlide>,
  QuestionsSlide,
]

const App = () => (
  <>
    <Presentation
      name='Otus React Course: —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'
      theme={theme}
    >
      {CheckRecordSlide}
      {CheckSoundVideoSlide}
      {RulesSlide}

      <AnimatedSlide<{
        card: {
          position: 'absolute'
          top: string
          left: string
          transform: string
        }
      }>
        layout={CenteredPlainLayout}
        name='–§–ü'
        steps={[
          {
            card: {
              position: 'absolute',
              top: '150%',
              left: '50%',
              transform: 'translate(-50%, -50%) scale(1)',
            },
          },
          {
            card: {
              top: '80%',
            },
          },
          {
            card: {
              top: '50%',
              left: '50%',
              transform: 'translate(-50%, -50%) scale(2)',
            },
          },
        ]}
      >
        {(styles) => (
          <React.Fragment>
            <Alert>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ</Alert>
            <animated.div style={styles.card}>
              <Card>
                <Avatar />
                <CardContent>
                  <CardTitle>–ú–∞–π–∫ –ë–∞—à—É—Ä–æ–≤</CardTitle>
                  <CardDesc>Senior Frontend Engineer @ WiseBits</CardDesc>
                  <CardDesc>@saitonakamura</CardDesc>
                </CardContent>
              </Card>
            </animated.div>
          </React.Fragment>
        )}
      </AnimatedSlide>

      <TitleSlide name='–¢–µ—Å—Ç' title='–í—Ä–µ–º—è –¥–ª—è —Ç–µ—Å—Ç–∞' layout={CenteredLayout}>
        <OuterLink href='https://docs.google.com/forms/d/e/1FAIpQLSeRg-69hhmcBkqe3MLM0xM83QJVj9yN7PCNDDAUyDQKf_dR6Q/viewform?usp=sf_link'>
          <Text size={150}>üß™</Text>
        </OuterLink>
      </TitleSlide>

      <MicrophoneSlide
        name='–ß—Ç–æ –∑–Ω–∞–µ—Ç–µ –æ–± –§–ü'
        title='–ß—Ç–æ –≤—ã –∑–Ω–∞–µ—Ç–µ/—Å–ª—ã—à–∞–ª–∏ –æ–± –§–ü? –ß—Ç–æ –±—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å?'
        titleSize={35}
      />

      <TitleSlide name='–ó–∞—á–µ–º' title='–ó–∞—á–µ–º —ç—Ç–æ –≤—Å—ë?' layout={CenteredLayout}>
        <List gapSize={70}>
          <Fragment>
            <ListItem>
              <Text size={45}>–§–ü –∏–º–µ–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤</Text>
            </ListItem>
          </Fragment>
          <Fragment>
            <ListItem>
              <Text size={45}>–ï–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –±–∏–±–ª–∏–æ—Ç–µ–∫</Text>
            </ListItem>
          </Fragment>
          <Fragment>
            <ListItem>
              <Text size={45}>–í—ã —É–∂–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ</Text>
            </ListItem>
          </Fragment>
        </List>
      </TitleSlide>

      <TitleSlide
        name='–ö–∞—Ä—Ç–∞'
        title='–ö–∞—Ä—Ç–∞ –≤–µ–±–∏–Ω–∞—Ä–∞'
        layout={CenteredPlainLayout}
      >
        <List gapSize='s'>
          <FullWidthFragment>
            <ListItem>
              <NoticeBlock>–ß–∏—Å—Ç–æ—Ç–∞ üßº</NoticeBlock>
            </ListItem>
          </FullWidthFragment>
          <FullWidthFragment>
            <ListItem>
              <NoticeBlock>–ö–∞—Ä—Ä–∏ üç≤</NoticeBlock>
            </ListItem>
          </FullWidthFragment>
          <FullWidthFragment>
            <ListItem>
              <NoticeBlock>–¢–∏–ø—ã ‚ú®</NoticeBlock>
            </ListItem>
          </FullWidthFragment>
          <FullWidthFragment>
            <ListItem>
              <NoticeBlock>–ú–æ–Ω–∞–¥—ã? üòà</NoticeBlock>
            </ListItem>
          </FullWidthFragment>
        </List>
      </TitleSlide>

      {...PuritySlides}

      {...ImmutabilitySlides}

      {...CurrySlides}

      {...TypesSlides}

      <TitleSlide name='–î–æ–ø –º–∞—Ç–µ—Ä–∏–∞–ª—ã' title='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'>
        <List>
          <ListItem>
            <OuterLink href='https://mostly-adequate.gitbooks.io/mostly-adequate-guide/'>
              <Text size='m'>‚ñ™ –ö–Ω–∏–≥–∞ –ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞ –§—Ä–∏—Å–±–∏ ü¶ù</Text>
            </OuterLink>
          </ListItem>
          <ListItem>
            <OuterLink href='https://github.com/hmemcpy/milewski-ctfp-pdf'>
              <Text size='m'>‚ñ™ –¢–µ–æ—Ä–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤</Text>
            </OuterLink>
          </ListItem>
          <ListItem>
            <OuterLink href='https://blog.ploeh.dk/2017/10/04/from-design-patterns-to-category-theory/'>
              <Text size='m'>
                ‚ñ™ –ë–ª–æ–≥ –ú–∞—Ä–∫–∞ –°–∏–º–º–æ–Ω–∞: –æ—Ç –¥–∏–∑–∞–π–Ω –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∫ —Ç–µ–æ—Ä–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
              </Text>
            </OuterLink>
          </ListItem>
        </List>
      </TitleSlide>

      {QuestionsSlide}
    </Presentation>
    <GlobalStyle />
  </>
)

ReactDOM.render(<App />, document.querySelector('#root'))
